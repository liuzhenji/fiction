<style>
.index-container {
    display: flex;
    flex-direction: column;
}

.classification-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    margin-top: 55rpx;
    padding: 15rpx 30rpx;
}

.classification-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.cls-item-image {
    height: 46rpx;
    width: 46rpx;
    border-radius: 46rpx;
    padding: 20rpx;
    /* background-color: blueviolet; */
}

.cls-item-title {
    color:rgb(73, 78, 78);
    font-size:10px;
    font-weight:500;
}

.ad-container {
    display: flex;
    flex-direction: column;
    padding: 0 30rpx;
}

.ad-item-1 {
    display: flex;
    flex-direction: column;
    padding: 15rpx 0;
}

.ad-item-1-image-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.index-image-large {
    height: 300rpx;
    width: 100%;
}

.index-image-small {
    height: 150rpx;
    width: 220rpx;
}

.ad-item-2 {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 15rpx 0;
}

.ad-item-2-left {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.ad-item-tags {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: 15rpx 0;
}

.tag {
    font-size: 9px;
    color: white;
    padding: 0em 0.2em 0.05em 0.2em;
    border-radius: 0.3em;
    background-color: rgb(180, 92, 217);
}

.classification {
    margin-left: 15rpx;
    font-size: 12px;
    color: rgb(86, 87, 104);
}
</style>

<template lang='pug'>
<view>
  <view wx:if='{{checkMode}}' class='ad-container'>
    <view class='ad-item-1'>
      <repeat for='{{advertisers}}' key='{{index}}'>
        <view @tap.stop='tapAd({{item.ficId}})' class='ad-item-1'>
          <text>{{item.title}}</text>
          <view class='ad-item-1-image-container'>
              <image class='index-image-large' mode='aspectFill' src='{{urlPrefix}}/statics/images/{{item.imgs}}'/>
          </view>
          <view class='ad-item-tags'>
            <view class='tag'>最新</view>
          </view>
        </view>
        <view class='separate-line-1'/>
      </repeat>
    </view>
    <view class='separate-line-1'/>
  </view>
  <view wx:else class='index-container'>
    <view class='classification-container'>
      <repeat for='{{classifications}}' key='{{index}}'>
        <view @tap.stop='tapClassification({{item.id}})' class='classification-item'>
          <image class='cls-item-image'  style='background-color:{{randomColor[index]}}' mode='aspectFill' src='{{urlPrefix}}/statics/images/{{item.icon}}'/>
          <view class='cls-item-title'>{{item.title}}</view>
        </view>
      </repeat>
    </view>
    <view class='separate-line-1'/>
    <view class='ad-container'>
      <repeat for='{{advertisers}}' key='{{index}}'>
        <view @tap.stop='tapAd({{item.ficId}})' class='ad-item-1'>
          <text>{{item.title}}</text>
          <view class='ad-item-1-image-container'>
              <image class='index-image-large' mode='aspectFill' src='{{urlPrefix}}/statics/images/{{item.imgs}}'/>
          </view>
          <view class='ad-item-tags'>
            <view class='tag'>{{item.adTags}}</view>
            <view class='classification'>{{item.clsTitle}}</view>
          </view>
        </view>
        <view class='separate-line-1'/>
      </repeat>
    </view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy';
import utils from '@/utils/util';
import moment from 'moment';

export default class Index extends wepy.page {
  data = {
    checkMode: true,
    pageNum: 1,
    pageSize: 10,
    randomColor: ['#ffadd2', '#ffa39e', '#ffbb96', '#ffd591', '#ffe58f', '#13c2c2', '#52c41a', '#a0d911', 'rgb(119, 218, 236)', 'rgb(121, 216, 143)'],
    classifications: null,
    advertisers: null,
    urlPrefix: utils.urlPrefix
  }

  methods = {
    tapAd(ficId) {
      this.$parent.globalData.ficId = ficId;
      this.$parent.globalData.serial = 1;
      this.$parent.globalData.chapId = null;
      if (this.checkMode) {
        return;
      }
      wepy.navigateTo({
        url: './Read'
      });
    },
    tapClassification(clsId) {
      wepy.navigateTo({
        url: `./Fiction?clsId=${clsId}`
      });
    }
  }

  onLoad() {
    this._init();
  }

  onPullDownRefresh() {
    this._init();
  }

  async onReachBottom() {
    let adRet = await this._loadAds(this.pageNum + 1, this.pageSize);
    let ads = [...this.advertisers];
    this.advertisers = ads.concat(adRet);
    this.$apply();
  }

  onShareAppMessage(options) {
    const openid = wepy.getStorageSync('session').user.openid;
    const timeStamp = moment(Date.now()).format('YYYY-MM-DDTHH:mm:ss.sss');
    return {
      path: `/pages/Index?fromOpenid=${openid}&shareDate=${timeStamp}`
    };
  }

  async _init() {
    let { data } = await utils.fetch({
      url: `${utils.urlPrefix}/systemconfigs/1`
    });
    if (data) {
      //非审核模式
      if (data !== 1) {
        this.checkMode = false;
      }
      this.$apply();
      await this._loadClses();
      let adRet = await this._loadAds(1, this.pageSize);
      if (adRet) {
        this.advertisers = adRet;
        this.$apply();
      }
    }
  }

  async _loadClses() {
    let { data } = await utils.fetch({
      url: `${utils.urlPrefix}/classifications`
    });
    if (data.result) {
      this.classifications = data.result;
      this.$apply();
    }
  }

  async _loadAds(pageNum, pageSize) {
    const mode = this.checkMode ? 'check' : 'normal';
    let { data } = await utils.fetch({
      url: `${utils.urlPrefix}/ads?pageNum=${pageNum}&pageSize=${pageSize}&mode=${mode}`
    });
    if (data.result) {
      this.pageNum = pageNum;
      this.pageSize = pageSize;
      this.$apply();
      return data.result;
    }
  }
}
</script>
