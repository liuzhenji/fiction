<style>
span {
  border: 0px;
  padding: 0px;
}
.fiction-container {
  height: 100%;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: center;
  align-content: center;
  box-sizing: border-box;
}

.fiction-item {
  display: flex;
  flex-direction: row;
  padding: 10rpx 0rpx;
  width: 100%;
}

.image-container {
  width: 30%;
  height: 280rpx;
}

.image-desc {
  width: 100%;
  height: 100%;
}
.content-container {
  width: 70%;
  display: flex;
  padding: 3rpx 0rpx 3rpx 30rpx;
  flex-direction: column;
  justify-content: space-around;
}

.content-title {
  font-size: 18px;
}

.content-artist {
  color: #8d8d8d;
  font-size: 10px;
}

.content-desc {
  color: #8d8d8d;
  font-size: 11px;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
</style>

<template lang='pug'>
<view class='container fiction-container'>
  <view wx:if='{{fictions.length ===0}}'>没有找到小说....</view>
  <view wx:else>
    <repeat for='{{fictions}}' key='{{index}}'>
      <view @tap.stop='tapFiction({{item.id}})' class='fiction-item' >
        <view class='image-container'>
          <image mode='aspectFill' class='image-desc' src='{{urlPrefix}}/statics/images/{{item.avatar}}'></image>
        </view>
        <view class='content-container'>
          <text class='content-title'>{{item.title}}</text>
          <text class='content-artist'>{{item.artist}}</text>
          <text class='content-desc'>{{item.description}}</text>
          <text class='content-desc'>更新至  {{item.latestChap.title}}</text>
        </view>
      </view>
    </repeat>
  </view>
</view>
</template>

<script>
import wepy from 'wepy';
import utils from '@/utils/util';
export default class Fiction extends wepy.page {
  data = {
    fictions: null,
    pageNum: 1,
    pageSize: 10,
    titleLike: null,
    clsId: null,
    urlPrefix: utils.urlPrefix
  }

  config = {
    navigationBatTitlleText: '小说列表'
  }

  methods = {
    tapFiction(ficId) {
      this.$parent.globalData.ficId = ficId;
      this.$parent.globalData.chapId = null;
      this.$parent.globalData.serial = 1;
      wepy.navigateTo({
        url: './Read'
      });
    }
  }

  async onLoad(options) {
    this.titleLike = options.titleLike || null;
    this.clsId = options.clsId || null;
    let ret = await this._loadFictions(this.clsId, this.titleLike, 1, this.pageSize);
    this.fictions = ret;
    this.$apply();
  }

  async onPullDownRefresh() {
    let ret = await this._loadFictions(this.clsId, this.titleLike, 1, this.pageSize);
    this.fictions = ret;
    this.$apply();
  }

  async onReachBottom() {
    let ret = await this._loadFictions(this.clsId, this.titleLike, this.pageNum + 1, this.pageSize);
    let fictions = [...this.fictions, ...ret];
    this.fictions = fictions;
    this.$apply();
  }

  async _loadFictions(clsId, titleLike, pageNum, pageSize) {
    let params = new Object();
    params.pageSize = pageSize;
    params.pageNum = pageNum;
    if (clsId) {
      params.clsId = clsId;
    }
    if (titleLike) {
      params.titleLike = titleLike;
    }
    let { data } = await utils.fetch({
      url: `${utils.urlPrefix}/fictions`,
      data: params
    });
    if (data.result) {
      this.pageNum = pageNum;
      this.$apply();
      return data.result;
    } else {
      return new Array();
    }
  }
}
</script>

